{"version":3,"sources":["interfaces/entities/Patient.ts","components/atoms/header/styles.ts","components/atoms/header/index.tsx","components/atoms/title/styles.ts","components/atoms/title/index.tsx","components/atoms/text/styles.ts","components/atoms/text/index.tsx","components/atoms/container/styles.ts","components/atoms/container/index.tsx","components/molecules/motivation/styles.ts","components/molecules/motivation/index.tsx","components/organisms/homeheader/index.tsx","components/organisms/homemain/styles.ts","components/organisms/homemain/index.tsx","components/templates/home/index.tsx","components/organisms/signupform/styles.ts","components/organisms/signup2/styles.ts","components/organisms/signupform/index.tsx","components/templates/signup/index.tsx","styles/global/index.ts","components/organisms/profile/styles.ts","components/organisms/profile/index.tsx","components/templates/profile/index.tsx","components/organisms/mood/styles.ts","components/organisms/mood/index.tsx","components/templates/mood/index.tsx","components/molecules/Notificationbar/styles.ts","components/molecules/Notificationbar/index.tsx","components/organisms/notification/index.tsx","components/templates/notification/index.tsx","components/organisms/chats/index.tsx","components/templates/chats/index.tsx","components/templates/chats/chat/index.tsx","components/atoms/svg/logo/index.tsx","components/organisms/topbar/styles.ts","components/organisms/topbar/index.tsx","components/organisms/menu/styles.ts","components/molecules/icontext/styles.ts","components/molecules/icontext/index.tsx","img/home.svg","img/mood.svg","img/notification.svg","img/chat.svg","components/atoms/anchor/index.tsx","components/organisms/menu/index.tsx","components/templates/layout/index.tsx","components/organisms/loginform/styles.ts","components/organisms/loginform/index.tsx","components/templates/login/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Mood","StyledHeader","styled","div","Header","props","children","StyledTitle","h1","size","color","fontFamily","margin","display","alignText","justifyContent","Title","StyledText","p","Text","StyledContainer","w","h","m","bg","radius","direction","justify","align","Container","Motivation","HomeHeader","StyledHomeMain","main","StyledContainerButton","ContainerBottom","StyledButton","Button","lang","people","name","icon","HomeMain","useState","person","setPerson","handleClick","find","text","items","map","index","togglable","selected","onClick","bind","undefined","Home","Borderbottom","SubmitCont","dataCounselor","label","value","mood","Normal","Happy","Depressed","Anxious","Lonely","Stressed","radioGroupValidator","FormRadioGroup","fieldRenderProps","validationMessage","touched","id","layout","valid","disabled","hint","others","showValidationMessage","showHint","hindId","errorId","labelId","editorId","editorValid","editorDisabled","ariaDescribedBy","ariaLabelledBy","emailRegex","RegExp","emailValidator","test","EmailInput","visited","SignUpForm","redirect","setRedirect","form","setForm","React","username","email","password","handleSubmit","values","a","console","log","options","method","mode","cache","credentials","headers","referrerPolicy","body","JSON","stringify","fetch","response","json","data","ok","token","localStorage","setItem","alert","message","to","onSubmit","render","formRenderProps","className","component","Input","required","minLength","type","validator","allowSubmit","style","App","getItem","height","GlobalStyles","createGlobalStyle","ButtonDisplay","HeaderProfile","ImgContainer","Form","Styledinput","input","FormContainer","ButtonContainer","EditProfileContainer","EditProfile","Profile","setUsername","useEffect","user","parse","atob","split","look","src","alt","width","MoodSelect","MarginButton","MoodLayout","imageUrl","NotificationCon","TextCon","NotificationContainer","accept","Notification","notifications","setNotifications","fetched","setFetched","handleAccept","String","uid","findIndex","req","splice","then","requests","length","noti","count","Chatspage","alignContent","avatarUrl","bot","initialMessages","author","suggestedActions","timestamp","Date","messages","setMessages","countReplayLength","question","onMessageSend","event","botResponse","Object","assign","setTimeout","oldMessages","placeholder","Logo","viewBox","fill","xmlns","d","StyledAppBar","AppBar","TopBar","shape","IconText","Anchor","Menu","home","chat","notification","Layout","LoginForm","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b137d537.chunk.js","sourcesContent":["import User from \"./User\";\r\n\r\nexport enum Mood {\r\n  Normal = \"Normal\",\r\n  Depressed = \"Depressed\",\r\n  Anxious = \"Anxious\",\r\n  Stressed = \"Stressed\",\r\n  Lonely = \"Lonely\",\r\n  Happy = \"Happy\",\r\n}\r\n\r\n/**\r\n *  ============================\r\n *      Model Patients' data\r\n *  ============================\r\n */\r\n\r\nexport default interface Patient extends User {\r\n  mood: Mood;\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 225px;\r\n  background: #6e6be8;\r\n  border-radius: 0 0 40px 40px;\r\n  background-image: url(\"/img/star\"), url(\"/img/star2\");\r\n  background-position: left center, right center;\r\n`;\r\n","import { StyledHeader } from \"./styles\";\r\nimport Headerprops from \"./types\";\r\n\r\nconst Header: React.FC<Headerprops> = (props) => {\r\n  return (\r\n    <>\r\n      <StyledHeader>{props.children}</StyledHeader>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\nimport TitleProps from \"./types\";\r\n\r\nexport const StyledTitle = styled.h1<TitleProps>`\r\n  font-size: ${({ size = \"30px\" }) => size};\r\n  color: ${({ color = \"#000000\" }) => color};\r\n  font-family ${({ fontFamily = \"Poppins\" }) => fontFamily};\r\n  margin ${({ margin = \"0\" }) => margin}; \r\n  display ${({ display = \"\" }) => display};\r\n  align-text ${({ alignText = \"\" }) => alignText};\r\n  justify-content ${({ justifyContent = \"\" }) => justifyContent};\r\n`;\r\n","import { StyledTitle } from \"./styles\";\r\nimport TitleProps from \"./types\";\r\n\r\nconst Title: React.FC<TitleProps> = (props) => {\r\n  return (\r\n    <>\r\n      <StyledTitle {...props}>{props.children}</StyledTitle>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import styled from \"styled-components\";\r\nimport Textprops from \"./types\";\r\n\r\nexport const StyledText = styled.p<Textprops>`\r\n  font-size: ${({ size = \"18px\" }) => size};\r\n  color: ${({ color = \"#000000\" }) => color};\r\n  font-family ${({ fontFamily = \"Poppins\" }) => fontFamily};\r\n  margin ${({ margin = \"0\" }) => margin}; \r\n  display ${({ display = \"\" }) => display}; \r\n  align-text ${({ alignText = \"\" }) => alignText};\r\n  justify-content ${({ justifyContent = \"\" }) => justifyContent};\r\n`;\r\n","import { StyledText } from \"./styles\";\r\nimport Textprops from \"./types\";\r\n\r\nconst Text: React.FC<Textprops> = (props) => {\r\n  return (\r\n    <>\r\n      <StyledText {...props}>{props.children}</StyledText>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import styled from \"styled-components\";\r\nimport ContainerProps from \"./types\";\r\n\r\nexport const StyledContainer = styled.div<ContainerProps>`\r\n  width: ${({ w = \"auto\" }) => w};\r\n  height: ${({ h = \"auto\" }) => h};\r\n  margin: ${({ m = \"0\" }) => m};\r\n  padding: ${({ p = \"0\" }) => p};\r\n  background: ${({ bg = \"none\" }) => bg};\r\n  border-radius: ${({ radius = \"0px\" }) => radius};\r\n  display: ${({ display = \"\" }) => display};\r\n  flex-direction: ${({ direction = \"\" }) => direction};\r\n  justify-content: ${({ justify = \"\" }) => justify};\r\n  align-items: ${({ align = \"\" }) => align};\r\n`;\r\n","import { StyledContainer } from \"./styles\";\r\nimport ContainerProps from \"./types\";\r\n\r\nconst Container: React.FC<ContainerProps> = (props) => {\r\n  return (\r\n    <>\r\n      <StyledContainer {...props}>{props.children}</StyledContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","import styled from \"styled-components\";\r\nimport Container from \"components/atoms/container\";\r\n\r\nexport const StyledContainer = styled(Container)`\r\n  width: 365px;\r\n  height: 60px;\r\n  background: #ffffff;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 30px;\r\n`;\r\n","import Text from \"components/atoms/text\";\r\nimport { StyledContainer } from \"./styles\";\r\n\r\nconst Motivation: React.FC = () => {\r\n  return (\r\n    <>\r\n      <StyledContainer>\r\n        <Text>Motivational Phrase</Text>\r\n      </StyledContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Motivation;\r\n","import Header from \"components/atoms/header\";\r\nimport Title from \"components/atoms/title\";\r\nimport Text from \"components/atoms/text\";\r\nimport Motivation from \"components/molecules/motivation\";\r\nimport Container from \"components/atoms/container\";\r\n\r\nconst HomeHeader: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Header>\r\n        <Container\r\n          display=\"flex\"\r\n          align=\"center\"\r\n          justify=\"center\"\r\n          direction=\"column\"\r\n        >\r\n          <Title color=\"#ECECFC\" display=\"flex\">\r\n            Hi User,\r\n          </Title>\r\n          <br />\r\n          <Text color=\"#ECECFC\">Need some help today?</Text>\r\n          <Motivation />\r\n        </Container>\r\n      </Header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeHeader;\r\n","import styled from \"styled-components\";\r\nimport Container from \"components/atoms/container\";\r\nimport { Button } from \"@progress/kendo-react-buttons\";\r\n\r\nexport const StyledHomeMain = styled.main`\r\n  display: grid;\r\n`;\r\nexport const StyledContainerButton = styled(Container)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 40px;\r\n`;\r\nexport const ContainerBottom = styled(Container)<any>`\r\ndisplay:flex;\r\njustify-content: center;\r\nflex-direction:column;\r\nalign-items:center;\r\nmargin ${({ margin = \"0\" }) => margin}; \r\n`;\r\nexport const StyledButton = styled(Button)`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: flex-end;\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n`;\r\n","import { useState } from \"react\";\r\n\r\nimport Title from \"components/atoms/title\";\r\nimport Text from \"components/atoms/text\";\r\nimport {\r\n  Button,\r\n  DropDownButton,\r\n  ButtonGroup,\r\n} from \"@progress/kendo-react-buttons\";\r\n\r\nimport {\r\n  StyledHomeMain,\r\n  StyledContainerButton,\r\n  ContainerBottom,\r\n  StyledButton,\r\n} from \"./styles\";\r\nimport ContainerButton from \"components/atoms/container\";\r\n\r\nconst lang = [\"Global\", \"English\", \"Spanish\"];\r\n\r\nconst people = [\r\n  {\r\n    name: \"Random Person\",\r\n    icon: \"🐒\",\r\n  },\r\n  {\r\n    name: \"Counselor\",\r\n    icon: \"🍣\",\r\n  },\r\n];\r\n\r\nconst HomeMain: React.FC = () => {\r\n  const [person, setPerson] = useState<any>(people[0]);\r\n\r\n  const handleClick = (name: any) => {\r\n    setPerson(people.find((m: any) => m.name === name));\r\n  };\r\n  return (\r\n    <>\r\n      <StyledHomeMain>\r\n        <Title\r\n          display=\"flex\"\r\n          alignText=\"center\"\r\n          justifyContent=\"center\"\r\n          margin=\"80px 0px 0px 0px\"\r\n        >\r\n          Choose your Option\r\n        </Title>\r\n        <Text\r\n          display=\"flex\"\r\n          alignText=\"center\"\r\n          justifyContent=\"center\"\r\n          margin=\"40px 0px 0px 0px\"\r\n        >\r\n          Who do you want to talk with?\r\n        </Text>\r\n        <StyledContainerButton>\r\n          <DropDownButton text=\"Language\" items={lang} icon=\"globe\" />\r\n        </StyledContainerButton>\r\n\r\n        <ContainerBottom>\r\n          <h4>\r\n            <Title margin=\"40px 0px 10px 0px\" size=\"18\">\r\n              Order meal:\r\n            </Title>\r\n          </h4>\r\n          <ButtonGroup>\r\n            {people.map((p, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <ContainerBottom margin=\"30px 20px 0px 0px\">\r\n                    <Button\r\n                      togglable={true}\r\n                      selected={person.name === p.name}\r\n                      onClick={handleClick.bind(undefined, p.name)}\r\n                    >\r\n                      <span>{p.icon}</span>\r\n                      {p.name}\r\n                    </Button>\r\n                  </ContainerBottom>\r\n                </div>\r\n              );\r\n            })}\r\n          </ButtonGroup>\r\n        </ContainerBottom>\r\n        <ContainerBottom margin=\"40px 0px 0px 0px\">\r\n          <StyledButton>Search</StyledButton>\r\n        </ContainerBottom>\r\n      </StyledHomeMain>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeMain;\r\n","import HomeHeader from \"components/organisms/homeheader\";\r\nimport HomeMain from \"components/organisms/homemain\";\r\n\r\nconst Home: React.FC = () => {\r\n  return (\r\n    <>\r\n      <HomeHeader />\r\n      <HomeMain />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import styled from 'styled-components'\r\n\r\nimport Container from 'components/atoms/container'\r\n\r\nexport const StyledContainer = styled(Container)`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height:100%;\r\n`","import Container from \"components/atoms/container\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const SignupFormContainer = styled(Container)`\r\ndisplay:flex;\r\njustify-content: center;\r\n`\r\nexport const Borderbottom = styled(Container)`\r\nborder-bottom:1px solid;\r\n`\r\nexport const StyledContainer = styled(Container)`\r\ndisplay:flex;\r\njustify-content:center; \r\nwidth:34.25rem;\r\nflex-direction:column;\r\n`\r\nexport const Sbtxt = styled(Container)`\r\nmargin-right:1rem;\r\n`\r\nexport const SubmitCont = styled(Container)`\r\ndisplay:flex;\r\njustify-content:center;\r\n`","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { StyledContainer } from './styles'\r\nimport Container from 'components/atoms/container'\r\n\r\nimport Botsignup from \"components/organisms/signup2/2\";\r\nimport SignupText from \"components/organisms/signup2/3\";\r\nimport { RadioGroup, RadioButtonChangeEvent } from '@progress/kendo-react-inputs';\r\nimport { Button } from '@progress/kendo-react-buttons'\r\nimport Values from './types'\r\n\r\n\r\n\r\nimport { Form, Field, FormElement,FieldWrapper } from \"@progress/kendo-react-form\";\r\nimport { Mood } from '../../../interfaces/entities/Patient'\r\n\r\nimport { Error, Label,Hint } from \"@progress/kendo-react-labels\";\r\nimport { Input } from \"@progress/kendo-react-inputs\";\r\nimport { Borderbottom, SubmitCont } from \"../signup2/styles\";\r\n\r\nconst dataCounselor = [\r\n  { label: \"Yes\", value: true },\r\n  { label: \"No\", value: false },\r\n]\r\n\r\nconst mood = [\r\n  { label: \"Normal\", value: Mood.Normal },\r\n  { label: \"Happy\", value: Mood.Happy },\r\n  { label: \"Depressed\", value: Mood.Depressed },\r\n  { label: \"Anxious\", value: Mood.Anxious },\r\n  { label: \"Lonely\", value: Mood.Lonely },\r\n  { label: \"Stressed\", value: Mood.Stressed },\r\n];\r\n\r\nconst radioGroupValidator = (value:any) =>\r\n  !value ? \"Type of Confirmation is required\" : \"\";\r\n\r\nconst FormRadioGroup = (fieldRenderProps:any) => {\r\n  const {\r\n    validationMessage,\r\n    touched,\r\n    id,\r\n    label,\r\n    layout,\r\n    valid,\r\n    disabled,\r\n    hint,\r\n    ...others\r\n  } = fieldRenderProps;\r\n\r\n  const showValidationMessage = touched && validationMessage;\r\n  const showHint = !showValidationMessage && hint;\r\n  const hindId = showHint ? `${id}_hint` : \"\";\r\n  const errorId = showValidationMessage ? `${id}_error` : \"\";\r\n  const labelId = label ? `${id}_label` : \"\";\r\n\r\n  return (\r\n    <FieldWrapper>\r\n      <Label\r\n        id={labelId}\r\n        editorId={id}\r\n        editorValid={valid}\r\n        editorDisabled={disabled}\r\n      >\r\n        {label}\r\n      </Label>\r\n      <RadioGroup\r\n        id={id}\r\n        ariaDescribedBy={`${hindId} ${errorId}`}\r\n        ariaLabelledBy={labelId}\r\n        valid={valid}\r\n        disabled={disabled}\r\n        layout={layout}\r\n        {...others}\r\n      />\r\n      {showHint && <Hint id={hindId}>{hint}</Hint>}\r\n      {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\r\n    </FieldWrapper>\r\n  );\r\n};\r\n\r\nconst emailRegex = new RegExp(/\\S+@\\S+\\.\\S+/);\r\nconst emailValidator = (value: any) =>\r\n  emailRegex.test(value) ? \"\" : \"Please enter a valid email.\";\r\nconst EmailInput = (fieldRenderProps: any) => {\r\n  const { validationMessage, visited, ...others } = fieldRenderProps;\r\n  return (\r\n    <div>\r\n      <Input {...others} />\r\n      {visited && validationMessage && <Error>{validationMessage}</Error>}\r\n    </div>\r\n  );\r\n};\r\nconst SignUpForm = () => {\r\n  const [redirect, setRedirect] = useState(false)\r\n  const [form, setForm] = useState('')\r\n  const [selectedValue, setSelectedValue] = React.useState('first');\r\n\r\n  const [values, setValues] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n\r\n\r\n  const handleSubmit = async (values:Values) => {\r\n\r\n    console.log(values)\r\n    // To Do Asign Loader or disable button\r\n\r\n    const options: RequestInit = {\r\n      method: \"POST\", \r\n      mode: \"cors\", \r\n      cache: \"no-cache\", \r\n      credentials: \"same-origin\", \r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n       \r\n      },\r\n      referrerPolicy: \"no-referrer\", \r\n      body: JSON.stringify(values),\r\n    };\r\n\r\n    const response = await fetch(\"/sessions/register\", options);\r\n    const data = await response.json();\r\n\r\n    if (data.ok) {\r\n      console.log(data.token);\r\n      localStorage.setItem(\"token\", data.token);\r\n      setRedirect(true)\r\n    } else {\r\n      alert(data.message);\r\n    }\r\n  };\r\n\r\n  if(redirect){\r\n    return <Redirect to='/profile' />\r\n  }\r\n\r\n  return (\r\n\r\n  <StyledContainer>\r\n    <Container>\r\n    <Button onClick={() => setForm('patient')}>\r\n      Patient\r\n    </Button>\r\n    \r\n    <Button onClick={() => setForm('counselor')}>\r\n      Counselor\r\n    </Button>\r\n    </Container>\r\n\r\n    {form === 'patient' &&\r\n      <Form\r\n      onSubmit={handleSubmit}\r\n      render={(formRenderProps) => (\r\n        <FormElement>\r\n          <fieldset className={\"k-form-fieldset\"}>\r\n            <legend className={\"k-form-legend\"}>\r\n            Sign Up\r\n            </legend>\r\n            <div className=\"mb-3\">\r\n              <Label editorId='username'>\r\n                User name\r\n              </Label>\r\n              <Borderbottom>\r\n              <Field\r\n               \r\n                id='username'\r\n                name={\"username\"}\r\n                component={Input}\r\n          \r\n                required={true}\r\n                minLength={5}\r\n              />\r\n              </Borderbottom>\r\n\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <Label editorId='email'>\r\n                Email\r\n              </Label>\r\n              <Borderbottom>\r\n              <Field\r\n               \r\n                name={\"email\"}\r\n                type={\"email\"}\r\n                component={EmailInput}\r\n                id='email'\r\n                validator={emailValidator}\r\n              />\r\n              </Borderbottom>\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <Label editorId='password'>\r\n                Password\r\n              </Label>\r\n              <Borderbottom>\r\n              <Field\r\n               \r\n                name={\"password\"}\r\n                component={Input}\r\n                id='password'\r\n                minLength={8}\r\n                required={true}\r\n              />\r\n              </Borderbottom>\r\n              <Field\r\n              id={\"mood\"}\r\n              name={\"mood\"}\r\n              label={\"How are you feeling?\"}\r\n              hint={\"Hint: Choose your mood\"}\r\n              component={FormRadioGroup}\r\n              data={mood}\r\n              layout={\"horizontal\"}\r\n              validator={radioGroupValidator}\r\n            />\r\n            </div>\r\n          </fieldset>\r\n          <SubmitCont>\r\n          <div className=\"k-form-buttons\">\r\n            <button\r\n              type={\"submit\"}\r\n              className=\"k-button\"\r\n              disabled={!formRenderProps.allowSubmit}\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n          </SubmitCont>\r\n        </FormElement>\r\n      )}\r\n    />\r\n    }\r\n    {form === 'counselor' &&\r\n      <Form\r\n      onSubmit={handleSubmit}\r\n      render={(formRenderProps) => (\r\n        <FormElement>\r\n          <StyledContainer>\r\n          <fieldset className={\"k-form-fieldset\"}>\r\n            <legend className={\"k-form-legend\"}>\r\n            Sign Up\r\n            </legend>\r\n            <div className=\"mb-3\">\r\n              <Label editorId='username'>\r\n                User name\r\n              </Label>\r\n              <Borderbottom>\r\n              <Field\r\n               \r\n                id='username'\r\n                name={\"username\"}\r\n                component={Input}\r\n          \r\n                required={true}\r\n                minLength={5}\r\n              />\r\n              </Borderbottom>\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <Label editorId='email'>\r\n                Email\r\n              </Label>\r\n              <Borderbottom>\r\n              <Field\r\n               \r\n                name={\"email\"}\r\n                type={\"email\"}\r\n                component={EmailInput}\r\n                id='email'\r\n                validator={emailValidator}\r\n              />\r\n              </Borderbottom>\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <Label editorId='password'>\r\n                Password\r\n              </Label>\r\n              <Borderbottom>\r\n              <Field\r\n               \r\n                name={\"password\"}\r\n                component={Input}\r\n                id='password'\r\n                minLength={8}\r\n                required={true}\r\n              />\r\n              </Borderbottom>\r\n              <Label editorId='university'>\r\n                University\r\n              </Label>\r\n              <Borderbottom>\r\n              <Field\r\n               \r\n                name={\"university\"}\r\n                component={Input}\r\n                id='university'\r\n                required={true}\r\n              />\r\n              </Borderbottom>\r\n              <Borderbottom>\r\n              <Field\r\n              id={\"graduated\"}\r\n              name={\"graduated\"}\r\n              label={\"Are you graduated?\"}\r\n              hint={\"Hint: Choose a your answer\"}\r\n              component={FormRadioGroup}\r\n              data={dataCounselor}\r\n              layout={\"horizontal\"}\r\n              validator={radioGroupValidator}\r\n            />\r\n            </Borderbottom>\r\n            </div>\r\n          </fieldset>\r\n          <div className=\"k-form-buttons\" style={{display:'flex',justifyContent:'center'}}>\r\n            <button\r\n              type={\"submit\"}\r\n              className=\"k-button\"\r\n              disabled={!formRenderProps.allowSubmit}>\r\n              Submit\r\n            </button>\r\n          </div>\r\n          </StyledContainer>\r\n        </FormElement>\r\n      )}\r\n    />\r\n    }\r\n\r\n    \r\n  </StyledContainer>\r\n\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import SignUpForm from \"components/organisms/signupform\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport TopBarSignup from \"components/organisms/signup2\"\r\nimport Text from \"components/atoms/text\";\r\nimport { Button } from \"@progress/kendo-react-buttons\";\r\n\r\nconst App: React.FC = () => {\r\n  if (localStorage.getItem('token')){\r\n    return <Redirect to='/profile' />\r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n      <div style={{display:'flex', justifyContent:'center', height:'34.25rem'}}>\r\n        <SignUpForm/>\r\n      </div>\r\n\r\n\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  html, body, div, span, applet, object, iframe,\r\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\n  a, abbr, acronym, address, big, cite, code,\r\n  del, dfn, em, img, ins, kbd, q, s, samp,\r\n  small, strike, strong, sub, sup, tt, var,\r\n  b, u, i, center,\r\n  dl, dt, dd, ol, ul, li,\r\n  fieldset, form, label, legend,\r\n  table, caption, tbody, tfoot, thead, tr, th, td,\r\n  article, aside, canvas, details, embed, \r\n  figure, figcaption, footer, header, hgroup, \r\n  menu, nav, output, ruby, section, summary,\r\n  time, mark, audio, video, input, button, select, textarea {\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n    font-size: 100%;\r\n    font-family: 'IBM Plex Mono', monospace;\r\n    vertical-align: baseline;\r\n    box-sizing: border-box;\r\n  }\r\n  /* HTML5 display-role reset for older browsers */\r\n  article, aside, details, figcaption, figure, \r\n  footer, header, hgroup, menu, nav, section {\r\n    display: block;\r\n  }\r\n  body {\r\n    line-height: 1;\r\n    cursor: url('/icons/Cursor.svg'), auto;\r\n  }\r\n  ol, ul {\r\n    list-style: none;\r\n  }\r\n  blockquote, q {\r\n    quotes: none;\r\n  }\r\n  blockquote:before, blockquote:after,\r\n  q:before, q:after {\r\n    content: '';\r\n    content: none;\r\n  }\r\n  table {\r\n    border-collapse: collapse;\r\n    border-spacing: 0;\r\n  }\r\n\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import styled from 'styled-components'\r\nimport Container from 'components/atoms/container'\r\n\r\nexport const ButtonDisplay = styled(Container)`\r\n  display: flex;\r\n  align-item: flex-start;\r\n  justify-content: flex-start;\r\n  width: 0px;\r\n  height: 0px;\r\n`\r\nexport const HeaderProfile = styled(Container)`\r\n  width: 100%;\r\n  height: 225px;\r\n  background: #6e6be8;\r\n  border-radius: 0 0 40px 40px;\r\n`\r\nexport const ImgContainer = styled(Container)`\r\n  display: block;\r\n  margin: 5px auto;\r\n  background: #f6f2f2;\r\n  border: 6px solid #6973aa;\r\n  box-sizing: border-box;\r\n  border-radius: 3px 100px 100px 100px;\r\n  width: 80px;\r\n  height: 80px;\r\n`\r\nexport const Form = styled(Container)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 1px solid #c4c4c4;\r\n  box-sizing: content-box;\r\n  border-radius: 0px 30px 30px 30px;\r\n  width: 400px;\r\n`\r\nexport const Styledinput = styled.input`\r\n  background: #f8f7fe;\r\n  border: 1px solid;\r\n  border-radius: 5px;\r\n`\r\nexport const FormContainer = styled(Container)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 50px auto;\r\n`\r\nexport const ButtonContainer = styled(Container)`\r\n  display: flex;\r\n  margin: 0 auto;\r\n  justify-content: center;\r\n`\r\nexport const EditProfileContainer = styled(Container)`\r\n  width: 200px;\r\n  height: 30px;\r\n  font-family: 'poppins';\r\n  margin: 10px 0px 0px 0px;\r\n`\r\nexport const EditProfile = styled(Container)`\r\n  display: flex;\r\n  margin: 50px 0px 50px 0px;\r\n  justify-content: center;\r\n`\r\n","import { useEffect, useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Counselor from '../../../interfaces/entities/Counselor'\r\nimport Patient from '../../../interfaces/entities/Patient'\r\n\r\nimport Title from 'components/atoms/title'\r\nimport { Button } from '@progress/kendo-react-buttons'\r\nimport {\r\n  ButtonDisplay,\r\n  Form,\r\n  HeaderProfile,\r\n  ImgContainer,\r\n  Styledinput,\r\n  FormContainer,\r\n  ButtonContainer,\r\n  EditProfileContainer,\r\n  EditProfile,\r\n} from './styles'\r\n\r\nconst Profile: React.FC = () => {\r\n\r\n  const [username, setUsername] = useState('Your Profile')\r\n  const [redirect, setRedirect] = useState(false)\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token')\r\n    if(!token){\r\n      setRedirect(true)\r\n    }else{\r\n      const user: Patient | Counselor = JSON.parse(atob(token.split('.')[1]))\r\n      setUsername(user.username)\r\n    }\r\n  })\r\n  if(redirect){\r\n\r\n    return <Redirect to='login'/>\r\n  }\r\n \r\n  return (\r\n    <>\r\n      <HeaderProfile>\r\n        <ButtonDisplay>\r\n          <Button icon=\"undo\" look=\"flat\" />\r\n        </ButtonDisplay>\r\n        <Title\r\n          color=\"#D0CFF4\"\r\n          size=\"24\"\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          margin=\"40px 0px 0px 0px\"\r\n        >\r\n          {username}\r\n        </Title>\r\n        <ImgContainer>\r\n          <img\r\n            src=\"img\\user 1.svg\"\r\n            alt=\"\"\r\n            style={{\r\n              display: 'flex',\r\n              margin: '5px auto',\r\n              height: '60px',\r\n              width: '60px',\r\n            }}\r\n          />\r\n        </ImgContainer>\r\n        <ButtonContainer>\r\n          <Button>Change Profile Picture</Button>\r\n        </ButtonContainer>\r\n      </HeaderProfile>\r\n      <br />\r\n      <FormContainer>\r\n        <Form>\r\n          <Title margin=\"5px auto\" size=\"14px\">\r\n            Your name\r\n          </Title>\r\n          <Styledinput />\r\n          <Title margin=\"5px auto\" size=\"14px\">\r\n            Username\r\n          </Title>\r\n          <Styledinput />\r\n          <Title margin=\"5px auto\" size=\"14px\">\r\n            Email\r\n          </Title>\r\n          <Styledinput />\r\n          <Title margin=\"5px auto\" size=\"14px\">\r\n            Password\r\n          </Title>\r\n          <Styledinput />\r\n          <br />\r\n        </Form>\r\n      </FormContainer>\r\n      <EditProfile>\r\n        <Button>\r\n          <EditProfileContainer>Edit Profile</EditProfileContainer>\r\n        </Button>\r\n      </EditProfile>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import Header from \"components/atoms/header\";\r\nimport Profile from \"components/organisms/profile\";\r\nimport { Button } from \"@progress/kendo-react-buttons\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nconst App: React.FC = () => {\r\n  if(!localStorage.getItem('token')){\r\n    return <Redirect to='login'/>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Profile />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import styled from \"styled-components\";\r\nimport Container from \"components/atoms/container\";\r\n\r\nexport const MoodSelect = styled(Container)`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  font-family: \"poppins\" sans-serif;\r\n  margin: 50px 0px 90px 0px;\r\n`;\r\nexport const MarginButton = styled(Container)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 1px solid #8684ec;\r\n  box-sizing: content-box;\r\n  border-radius: 0px 20px 20px 20px;\r\n  width: 100px;\r\n  height: 100px;\r\n`;\r\n","import Title from \"components/atoms/title\";\r\nimport { Button } from \"@progress/kendo-react-buttons\";\r\nimport { MarginButton, MoodSelect } from \"components/organisms/mood/styles\";\r\n\r\nconst MoodLayout: React.FC = () => {\r\n  return (\r\n    <>\r\n      {/* Mood select contains all the styles for the emojis. And MarginButtom contains all the styles for the border */}\r\n      <Title margin=\"20px 0px 0px 30px\">Moods</Title>\r\n      <MoodSelect>\r\n        <MarginButton>\r\n          <Button imageUrl=\"img\\001-shy 1.svg\" look=\"flat\" />\r\n        </MarginButton>\r\n        <MarginButton>\r\n          <Button imageUrl=\"img\\006-grin 1.svg\" look=\"flat\" />\r\n        </MarginButton>\r\n        <MarginButton>\r\n          <Button imageUrl=\"img\\021-happy 1.svg\" look=\"flat\" />\r\n        </MarginButton>\r\n      </MoodSelect>\r\n      <MoodSelect>\r\n        <MarginButton>\r\n          <Button imageUrl=\"img\\039-crying 1.svg\" look=\"flat\" />\r\n        </MarginButton>\r\n        <MarginButton>\r\n          <Button imageUrl=\"img\\047-hardcrying 1.svg\" look=\"flat\" />\r\n        </MarginButton>\r\n        <MarginButton>\r\n          <Button imageUrl=\"img\\022-disappointed 2.svg\" look=\"flat\" />\r\n        </MarginButton>\r\n      </MoodSelect>\r\n      <Title margin=\"0px 0px 0px 30px\">Other Moods</Title>\r\n      <MoodSelect>\r\n        <MarginButton>\r\n          <Button imageUrl=\"img\\041-flush 1.svg\" look=\"flat\" />\r\n        </MarginButton>\r\n        <MarginButton>\r\n          <Button imageUrl=\"img\\007-sick 1.svg\" look=\"flat\" />\r\n        </MarginButton>\r\n        <MarginButton>\r\n          <Button imageUrl=\"img\\005-starstruck 1.svg\" look=\"flat\" />\r\n        </MarginButton>\r\n      </MoodSelect>\r\n      <MoodSelect>\r\n        <MarginButton>\r\n          <Button imageUrl=\"img\\015-angry 1.svg\" look=\"flat\" />\r\n        </MarginButton>\r\n        <MarginButton>\r\n          <Button imageUrl=\"img\\010-disappointment 1.svg\" look=\"flat\" />\r\n        </MarginButton>\r\n        <MarginButton>\r\n          <Button imageUrl=\"img\\033-angry 2.svg\" look=\"flat\" />\r\n        </MarginButton>\r\n      </MoodSelect>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoodLayout;\r\n","import MoodLayout from \"components/organisms/mood\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <>\r\n      <MoodLayout />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import Container from \"components/atoms/container\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nexport const NotificationCon = styled(Container)`\r\nwidth: 80%;\r\nheight: 60px;\r\nbackground: #C4C4C4;\r\nborder-radius: 30px;\r\nmargin: 50px auto;\r\nfont-family: Poppins;\r\nfont-style: normal;\r\nfont-weight: normal;\r\nfont-size: 1rem;\r\nline-height: 19px;\r\ndisplay:flex;\r\njustify-content: center;\r\n`\r\nexport const TextCon = styled(Container)`\r\nfont-size: 0.9rem;\r\ntext-align:center;\r\n`","import { NotificationCon, TextCon } from \"./styles\"\r\nimport Props from './types'\r\n\r\nconst NotificationContainer: React.FC<Props> = (props) => {\r\n  return (\r\n    <>\r\n      <NotificationCon>\r\n        <TextCon>\r\n          {props.username} has sent you a friend request\r\n        </TextCon>\r\n        <button onClick={() => props.accept(props.id)}>Accept</button>\r\n      </NotificationCon>\r\n  </>);\r\n}\r\nexport default NotificationContainer","import Title from \"components/atoms/title\"\r\nimport NotificationContainer from \"components/molecules/Notificationbar\"\r\nimport TopBar from \"../topbar\"\r\nimport FriendRequest from '../../../interfaces/FriendRequest'\r\nimport { useEffect, useState } from \"react\"\r\nimport Skeleton from 'react-loading-skeleton'\r\n\r\nconst Notification: React.FC = () => {\r\n\r\n  /* State to store the notifications */\r\n  const [notifications, setNotifications] = useState<FriendRequest[]>([])\r\n  const [fetched, setFetched] = useState(false)\r\n\r\n  /* Accept a friend request */\r\n  const handleAccept = async (id: number) : Promise<void> => {\r\n    \r\n    /* Ajax request options */\r\n    const options: RequestInit = {\r\n      method: \"PUT\", // *GET, POST, PUT, DELETE, etc.\r\n      mode: \"cors\", // no-cors, *cors, same-origin\r\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: \"same-origin\", // include, *same-origin, omit\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"token\": String(localStorage.getItem('token'))\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n      body: JSON.stringify({ uid: id })\r\n    };\r\n\r\n    /* Communicate with the API */\r\n    const response = await fetch('/api/acceptfriend', options)\r\n    const data = await response.json()\r\n\r\n    if(!data.ok)\r\n      alert(data.message)\r\n    else{\r\n\r\n      /* Remove friend request from notifications */\r\n      const index = notifications.findIndex((req) => req.id === id)\r\n      setNotifications(notifications.splice(index, 1))\r\n    }\r\n  }\r\n\r\n  /* Once loaded fetch information from the API */\r\n  useEffect(() => {\r\n\r\n    /* Ajax request options */\r\n    const options: RequestInit = {\r\n      method: \"GET\", // *GET, POST, PUT, DELETE, etc.\r\n      mode: \"cors\", // no-cors, *cors, same-origin\r\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: \"same-origin\", // include, *same-origin, omit\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"token\": String(localStorage.getItem('token'))\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n    };\r\n\r\n    fetch('/api/notification', options)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if(!data.ok)\r\n          alert(data.message)\r\n        else{\r\n          setNotifications(data.requests)\r\n          setFetched(true)\r\n        }\r\n      })\r\n  })\r\n\r\n  if(!fetched){\r\n    return (\r\n      <>\r\n        <Title margin='20px 0px 0px 30px'> Notifications</Title>\r\n        <Skeleton count={5} />\r\n      </>);\r\n  }else{\r\n    return (\r\n      <>\r\n        <Title margin='20px 0px 0px 30px'> Notifications</Title>\r\n        {\r\n          notifications.length == 0 ? `You don't have any notification right now` : notifications.map((noti) => <NotificationContainer id={noti.id} username={noti.username} accept={handleAccept} />)\r\n        }\r\n      </>\r\n    )\r\n  }\r\n}\r\n  \r\nexport default Notification;","import { Badge, BadgeContainer } from \"@progress/kendo-react-indicators\"\r\nimport Title from \"components/atoms/title\"\r\nimport Notification from \"components/organisms/notification\"\r\nimport { Redirect } from \"react-router-dom\"\r\n \r\nconst App: React.FC = () => {\r\n\r\n  return <>\r\n  <Notification/>\r\n\r\n  </>;\r\n};\r\n\r\nexport default App;\r\n","import Text from \"components/atoms/text\"\r\nimport Title from \"components/atoms/title\"\r\nimport NotificationContainer from \"components/molecules/Notificationbar\"\r\nimport { NotificationCon } from \"components/molecules/Notificationbar/styles\"\r\n\r\nimport TopBar from \"../topbar\"\r\n\r\nconst Chatspage: React.FC = () => {\r\n  return (\r\n    <>\r\n    <Title margin='20px 0px 0px 30px'> Chats </Title>\r\n    <NotificationCon>\r\n    <img src='img\\human-resources-svgrepo-com 3.svg' style={{display:'block', alignContent:'flex-start', margin:'auto 0px auto 10px'}}/>\r\n      <Text margin='auto auto auto auto' size='0.9rem'>\r\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Harum, dolorem?\r\n      </Text>\r\n      </NotificationCon>\r\n      <NotificationCon>\r\n      <img src='img\\human-resources-svgrepo-com 3.svg' style={{display:'block', alignContent:'flex-start', margin:'auto 0px auto 10px'}}/>\r\n      <Text margin='auto auto auto auto' size='0.9rem'>\r\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Harum, dolorem?\r\n      </Text>        \r\n      </NotificationCon>\r\n      <NotificationCon>\r\n      <img src='img\\human-resources-svgrepo-com 3.svg' style={{display:'block', alignContent:'flex-start', margin:'auto 0px auto 10px'}}/>\r\n      <Text margin='auto auto auto auto' size='0.9rem'>\r\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Harum, dolorem?\r\n      </Text>\r\n      </NotificationCon>\r\n      <NotificationCon>\r\n      <img src='img\\human-resources-svgrepo-com 3.svg' style={{display:'block', alignContent:'flex-start', margin:'auto 0px auto 10px',}}/>\r\n      <Text margin='auto auto auto auto' size='0.9rem'>\r\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Harum, dolorem?\r\n      </Text>\r\n      </NotificationCon>\r\n      <NotificationCon>\r\n      <img src='img\\human-resources-svgrepo-com 3.svg' style={{display:'block', alignContent:'flex-start', margin:'auto 0px auto 10px'}}/>\r\n      <Text margin='auto auto auto auto' size='0.9rem'>\r\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Harum, dolorem?\r\n      </Text>\r\n      </NotificationCon>\r\n    \r\n        </>);\r\n}\r\n  \r\nexport default Chatspage;","import Chatspage from \"components/organisms/chats\"\r\n\r\nconst App: React.FC = () => {\r\n  return <>\r\n  <Chatspage/>\r\n   </>;\r\n};\r\n\r\nexport default App;\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport {\r\n  Chat,\r\n  ChatMessageSendEvent,\r\n  Message,\r\n} from \"@progress/kendo-react-conversational-ui\";\r\n\r\nconst user = {\r\n  id: 1,\r\n  avatarUrl: \"https://via.placeholder.com/24/008000/008000.png\",\r\n};\r\n\r\nconst bot = { id: 0 };\r\n\r\nconst initialMessages: Array<Message> = [\r\n  {\r\n    author: bot,\r\n    suggestedActions: [\r\n      {\r\n        type: \"reply\",\r\n        value: \"Oh, really?\",\r\n      },\r\n      {\r\n        type: \"reply\",\r\n        value: \"Thanks, but this is boring.\",\r\n      },\r\n    ],\r\n    timestamp: new Date(),\r\n    text:\r\n      \"Hello, this is a demo bot. I don't do much, but I can count symbols!\",\r\n  },\r\n];\r\n\r\nconst App = () => {\r\n  const [messages, setMessages] = React.useState(initialMessages);\r\n\r\n  const addNewMessage = (event: ChatMessageSendEvent) => {\r\n    let botResponse = Object.assign({}, event.message);\r\n    botResponse.text = countReplayLength(event.message.text);\r\n    botResponse.author = bot;\r\n    setMessages([...messages, event.message]);\r\n    setTimeout(() => {\r\n      setMessages((oldMessages) => [...oldMessages, botResponse]);\r\n    }, 1000);\r\n  };\r\n\r\n  const countReplayLength = (question: any) => {\r\n    let length = question.length;\r\n    let answer = question + \" contains exactly \" + length + \" symbols.\";\r\n    return answer;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Chat\r\n        user={user}\r\n        messages={messages}\r\n        onMessageSend={addNewMessage}\r\n        placeholder={\"Type a message...\"}\r\n        width={400}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import * as React from \"react\";\r\n\r\nfunction Logo(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      width={35}\r\n      height={35}\r\n      viewBox=\"0 0 35 35\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      {...props}\r\n    >\r\n      <path\r\n        d=\"M11.348 0H5.127A5.133 5.133 0 000 5.127v6.22c0 2.828 2.3 5.128 5.127 5.128h6.22c2.828 0 5.128-2.3 5.128-5.127V5.127C16.475 2.3 14.175 0 11.348 0zm3.076 11.348a3.08 3.08 0 01-3.076 3.076H5.127a3.08 3.08 0 01-3.076-3.076V5.127a3.08 3.08 0 013.076-3.076h6.22a3.08 3.08 0 013.077 3.076v6.22zM29.873 18.525h-6.22a5.133 5.133 0 00-5.128 5.127v6.221c0 2.827 2.3 5.127 5.127 5.127h6.221C32.7 35 35 32.7 35 29.873v-6.22c0-2.828-2.3-5.128-5.127-5.128zm3.076 11.348a3.08 3.08 0 01-3.076 3.076h-6.22a3.08 3.08 0 01-3.077-3.076v-6.22a3.08 3.08 0 013.076-3.077h6.221a3.08 3.08 0 013.076 3.076v6.221z\"\r\n        fill=\"#000\"\r\n      />\r\n      <path\r\n        d=\"M29.873 0h-6.22a5.133 5.133 0 00-5.128 5.127v6.22c0 3.959-3.22 7.178-7.177 7.178H5.127A5.133 5.133 0 000 23.652v6.221C0 32.7 2.3 35 5.127 35h6.22c2.828 0 5.128-2.3 5.128-5.127v-6.22c0-3.958 3.22-7.178 7.177-7.178h6.221c2.827 0 5.127-2.3 5.127-5.127V5.127C35 2.3 32.7 0 29.873 0zm-15.45 23.652v6.221a3.08 3.08 0 01-3.075 3.076H5.127a3.08 3.08 0 01-3.076-3.076v-6.22a3.08 3.08 0 013.076-3.077h6.22a9.173 9.173 0 003.98-.902 9.173 9.173 0 00-.903 3.978zM32.95 11.348a3.08 3.08 0 01-3.076 3.076h-6.22a9.173 9.173 0 00-3.98.902 9.173 9.173 0 00.903-3.978V5.127a3.08 3.08 0 013.076-3.076h6.221a3.08 3.08 0 013.076 3.076v6.22z\"\r\n        fill=\"#000\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import styled from \"styled-components\";\r\n\r\nimport {\r\n  AppBar,\r\n  AppBarSection,\r\n  AppBarSpacer,\r\n  Avatar,\r\n} from \"@progress/kendo-react-layout\";\r\n\r\nexport const StyledAppBar = styled(AppBar)`\r\n  height: 85px;\r\n`;\r\n","import {\r\n  AppBarSection,\r\n  AppBarSpacer,\r\n  Avatar,\r\n} from \"@progress/kendo-react-layout\";\r\n\r\nimport Logo from \"components/atoms/svg/logo\";\r\n\r\nimport { StyledAppBar } from \"./styles\";\r\n\r\nlet kendokaAvatar =\r\n  \"https://www.telerik.com/kendo-react-ui-develop/images/kendoka-react.png\";\r\n\r\nconst TopBar: React.FC = ({ children }) => {\r\n  return (\r\n    <>\r\n      <StyledAppBar>\r\n        <AppBarSection>\r\n          <button className=\"k-button k-button-clear\">\r\n            <Logo />\r\n          </button>\r\n        </AppBarSection>\r\n\r\n        <AppBarSpacer style={{ width: 4 }} />\r\n\r\n        <AppBarSection>\r\n          <h1 className=\"title\">Name</h1>\r\n        </AppBarSection>\r\n\r\n        <AppBarSpacer style={{ width: 32 }} />\r\n\r\n        <AppBarSpacer />\r\n\r\n        <AppBarSection>\r\n          <Avatar shape=\"circle\" type=\"image\">\r\n            <img src={kendokaAvatar} />\r\n          </Avatar>\r\n        </AppBarSection>\r\n      </StyledAppBar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","import styled from \"styled-components\";\r\nimport Container from \"components/atoms/container\";\r\n\r\nexport const StyledContainer = styled(Container)`\r\n  width: 100%;\r\n  height: 100px;\r\n  background: #ffffff;\r\n  box-shadow: 0px 0px 10px 1px rgba(0, 0, 0, 0.25);\r\n  border-radius: 40px 40px 0px 0px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  font-family: \"poppins\" sans-serif;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport Container from \"components/atoms/container\";\r\n\r\nexport const StyledContainer = styled(Container)``;\r\n","import { StyledContainer } from \"./styles\";\r\nimport Text from \"components/atoms/text\";\r\nimport IconTextProps from './types'\r\n\r\nconst IconText: React.FC<IconTextProps> = (props) => {\r\n  return (\r\n    <>\r\n      <StyledContainer>\r\n        <img\r\n          width=\"30px\"\r\n          src={props.src}\r\n          alt={props.alt}\r\n        />\r\n        <Text size='14px'>{props.children}</Text>\r\n      </StyledContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IconText;\r\n","export default __webpack_public_path__ + \"static/media/home.16e4d076.svg\";","export default __webpack_public_path__ + \"static/media/mood.3cf5ee53.svg\";","export default __webpack_public_path__ + \"static/media/notification.79119871.svg\";","export default __webpack_public_path__ + \"static/media/chat.96e3a94c.svg\";","import { Link } from 'react-router-dom'\r\nimport AnchorProps from './types'\r\n\r\nconst Anchor: React.FC<AnchorProps> = (props) => {\r\n  return (\r\n    <>\r\n      <Link to={props.to}>{props.children}</Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Anchor\r\n","import { StyledContainer } from \"./styles\";\r\nimport IconText from \"components/molecules/icontext\";\r\nimport home from '../../../img/home.svg'\r\nimport mood from '../../../img/mood.svg'\r\nimport notification from '../../../img/notification.svg'\r\nimport chat from '../../../img/chat.svg'\r\nimport Anchor from 'components/atoms/anchor'\r\n\r\nconst Menu: React.FC = () => {\r\n  return (\r\n    <>\r\n      <StyledContainer>\r\n        <Anchor to='/'>\r\n          <IconText src={home} alt='Home'>Home</IconText>\r\n        </Anchor>\r\n        <Anchor to='/mood'>\r\n          <IconText src={mood} alt='Mood'>Mood</IconText>\r\n        </Anchor>\r\n        <Anchor to='/chats'>\r\n          <IconText src={chat} alt='Chats'>Chats</IconText>\r\n        </Anchor>\r\n        <Anchor to='/notification'>\r\n          <IconText src={notification} alt='Notification'>Notification</IconText>\r\n        </Anchor>\r\n      </StyledContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import TopBar from \"components/organisms/topbar\";\r\nimport HomeHeader from \"components/organisms/homeheader\";\r\nimport HomeMain from \"components/organisms/homemain\";\r\nimport Menu from \"components/organisms/menu\";\r\n\r\nconst Layout: React.FC = (props) => {\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      {props.children}\r\n      <Menu />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import styled from 'styled-components'\r\n\r\nimport Container from 'components/atoms/container'\r\n\r\nexport const StyledContainer = styled(Container)`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n`","import React, { useState } from \"react\";\r\nimport { StyledContainer } from './styles'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport Botsignup from \"components/organisms/signup2/2\";\r\nimport SignupText from \"components/organisms/signup2/3\";\r\n\r\n\r\n\r\nimport { Form, Field, FormElement } from \"@progress/kendo-react-form\";\r\n\r\nimport { Error, Label } from \"@progress/kendo-react-labels\";\r\nimport { Input } from \"@progress/kendo-react-inputs\";\r\n\r\nconst emailRegex = new RegExp(/\\S+@\\S+\\.\\S+/);\r\nconst emailValidator = (value: any) =>\r\n  emailRegex.test(value) ? \"\" : \"Please enter a valid email.\";\r\nconst EmailInput = (fieldRenderProps: any) => {\r\n  const { validationMessage, visited, ...others } = fieldRenderProps;\r\n  return (\r\n    <div>\r\n      <Input {...others} />\r\n      {visited && validationMessage && <Error>{validationMessage}</Error>}\r\n    </div>\r\n  );\r\n};\r\nconst LoginForm = () => {\r\n  const [redirect, setRedirect] = useState(false)\r\n\r\n\r\n  const handleSubmit = async (values:{username?:string, password?: string}) => {\r\n    // To Do Asign Loader or disable button\r\n\r\n    const options: RequestInit = {\r\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n      mode: \"cors\", // no-cors, *cors, same-origin\r\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: \"same-origin\", // include, *same-origin, omit\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n      body: JSON.stringify(values), // body data type must match \"Content-Type\" header\r\n    };\r\n\r\n    const response = await fetch(\"/sessions/login\", options);\r\n    const data = await response.json();\r\n\r\n    if (data.ok) {\r\n      console.log(data.token);\r\n      localStorage.setItem(\"token\", data.token);\r\n      setRedirect(true)\r\n    } else {\r\n      alert(data.message);\r\n    }\r\n  };\r\n\r\n  if(redirect){\r\n    return <Redirect to='/profile' />\r\n  }\r\n\r\n  return (\r\n    \r\n  <StyledContainer>\r\n    <Form\r\n      onSubmit={handleSubmit}\r\n      render={(formRenderProps) => (\r\n        <FormElement >\r\n          <fieldset className={\"k-form-fieldset\"}>\r\n            <legend className={\"k-form-legend\"}>\r\n            Login\r\n            </legend>\r\n            <div className=\"mb-3\">\r\n              <Label editorId='username'>\r\n                User name\r\n              </Label>\r\n              <Field\r\n                \r\n                id='username'\r\n                name={\"username\"}\r\n                component={Input}\r\n           \r\n                required={true}\r\n                minLength={5}\r\n              />\r\n            </div>\r\n\r\n            \r\n\r\n            <div className=\"mb-3\">\r\n              <Label editorId='password'>\r\n                Password\r\n              </Label>\r\n              <Field\r\n                \r\n                name={\"password\"}\r\n                component={Input}\r\n                id='password'\r\n                minLength={8}\r\n                required={true}\r\n              />\r\n            </div>\r\n          </fieldset>\r\n          <div className=\"k-form-buttons\" >\r\n            <button\r\n              type={\"submit\"}\r\n              className=\"k-button\"\r\n              disabled={!formRenderProps.allowSubmit}\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n          \r\n        </FormElement>\r\n      )}\r\n    />\r\n  </StyledContainer>\r\n\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import LoginForm from 'components/organisms/loginform'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nconst App: React.FC = () => {\r\n  if (localStorage.getItem('token')){\r\n    return <Redirect to='/profile' />\r\n  }\r\n  return (\r\n    <>\r\n      <LoginForm/>\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"components/templates/home\";\r\nimport Signup from \"components/templates/signup\";\r\nimport \"./styles/theme/hackaton.css\";\r\nimport GlobalStyles from \"./styles/global\";\r\nimport Profile from \"components/templates/profile\"\r\nimport Mood from \"components/templates/mood\"\r\nimport Notification from \"components/templates/notification\"\r\nimport Chats from \"components/templates/chats\"\r\nimport Chat from \"components/templates/chats/chat\"\r\nimport Layout from 'components/templates/layout'\r\nimport Login from 'components/templates/login'\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n       <GlobalStyles />\r\n       <Layout>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        \r\n        <Route exact path=\"/signup\">\r\n          <Signup />\r\n        </Route>\r\n        <Route exact path=\"/login\">\r\n          <Login />\r\n        </Route>\r\n        <Route exact path=\"/profile\">\r\n          <Profile />\r\n        </Route>\r\n        <Route exact path=\"/mood\">\r\n          <Mood/>\r\n        </Route>\r\n        <Route exact path=\"/notification\">\r\n          <Notification/>\r\n        </Route>\r\n        <Route exact path=\"/chats\">\r\n          <Chats />\r\n        </Route>\r\n        <Route exact path=\"/chats/chat\">\r\n          <Chat />\r\n        </Route>\r\n      </Switch>\r\n      </Layout>\r\n\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from \"web-vitals\";\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}